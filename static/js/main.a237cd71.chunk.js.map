{"version":3,"sources":["components/Header.js","components/TableHead.js","components/Table.js","components/SearchForm.js","components/TableRows.js","utils/API.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","TableHead","props","scope","onClick","sortName","sortPhone","Table","children","SearchForm","type","placeholder","aria-label","value","onChange","TableRows","index","image","name","phone","email","dob","alt","src","users","Promise","resolve","reject","axios","get","then","res","results","data","map","user","firstname","first","lastname","last","picture","thumbnail","date","catch","err","App","useState","setUsers","search","setSearch","useEffect","loadUsers","API","sort","console","log","newUserArray","filter","toLowerCase","indexOf","e","target","newSortUser","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a237cd71.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../style/style.css\";\n\nfunction Header () {\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<h1 className=\"title\">Employee Directory </h1>\n\t\t\t<h6 className=\"subtitle\">Click on name to sort alphebetically and search for name in the search box</h6>\n\t\t</div>\n\t);\n}\n\nexport default Header;","import React from 'react';\n\nfunction TableHead(props) {\n  return (\n   \n        <thead>\n          <tr>\n            <th scope=\"col\">Image</th>\n            <th scope=\"col\" onClick= {props.sortName}>Name â–¼</th>\n            <th scope=\"col\" onClick= {props.sortPhone}>Phone</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">DOB</th>\n          </tr>\n        </thead>\n  \n  );\n}\nexport default TableHead;\n","// import React from \"react\";\n\n// function Table ({users}){\n//   return (\n//     <div>\n//       <div className=\"container\">\n//         {users}\n//       </div>\n//       </div>\n//   )\n// }\n// export default Table;\n\nimport React from \"react\";\nimport TableHead from \"./TableHead.js\"\n\nfunction Table(props) {\n  return (\n    <div>\n\n      <table className=\"table\">\n        \n      <TableHead sortName={props.sortName}/>\n        {/* {props.children} */}\n        \n        <tbody>\n\n          {props.children}\n        </tbody>\n      </table>\n\n    </div>\n  )\n}\nexport default Table;\n","import React from 'react';\nimport Table from './Table';\n\nfunction SearchForm(props) {\n  return (\n    <div className =\"container\">\n    <div className='SearchBar'>\n      <input\n        \n        className='form-control'\n        type='text'\n        placeholder='Type in a name to search'\n        aria-label='Search'\n        value={props.value}\n        onChange= {props.onChange}\n        \n      ></input>\n      <buton type=\"button\" onClick={props.onClick}>Search</buton>\n      {/* <Table value={props.users}/> */}\n    </div>\n    </div>\n  );\n}\n\nexport default SearchForm;\n\n\n","import React from \"react\";\n\nfunction TableRows({ index,image, name, phone, email, dob }) {\n  return (\n    <tr> \n      <td>\n        <img alt=\"employees\" src={image}/>\n      </td>\n      <td>{name}</td>\n      <td>{phone}</td>\n      <td>{email}</td>\n      <td>{dob}</td>\n    </tr>\n\n  )\n}\nexport default TableRows;\n","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the random user API\nexport default {\n\n  // dont do this \n  SearchTerm: function (){\n    return axios.get (\n      \"https://randomuser.me/api/?inc=picture,name,email,phone,dob\"\n    )\n  },\n  getEmployees: function(users) {\n    return new Promise((resolve, reject) => {\n      axios.get(\"https://randomuser.me/api/?results=15\").then((res) => {\n        const users = res.data.results;\n        const results = users.map((user) => {\n          return {\n            firstname: user.name.first,\n            lastname: user.name.last,\n            phone:user.phone,\n            email: user.email,\n            image: user.picture.thumbnail,\n            dob: user.dob.date\n          };\n        });\n        resolve(results);\n      }).catch((err) => reject(err));\n    });\n  }\n \n};\n\n// activities 6\n// searchTerms: function(query) {\n//   return axios.get(\n//     \"https://en.wikipedia.org/w/api.php?action=opensearch&search=\" +\n//       query +\n//       \"&limit=1&format=json&origin=*\"\n//   );\n// }\n\n// \n// https://randomuser.me/documentation#format\n// https://randomuser.me/api/?inc=gender,name,nat\n// https://randomuser.me/api/?inc=picture,name,email,phone,dob\";\n\n\n// import axios from \"axios\";\n\n// export default {\n//   search: function() {\n//     return axios.get(\"https://randomuser.me/api/?inc=picture,name,email,phone,dob\");\n//   }\n// };","// import HAVE to be capitalize \nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./components/Header.js\"\nimport Search from \"./components/SearchForm.js\"\nimport TableRows from \"./components/TableRows.js\"\nimport API from \"./utils/API.js\";\nimport Table from \"./components/Table.js\"\n// import TableHead from \"./components/TableHead.js\"\n\nfunction App() {\n  // set hooks \n  const [users, setUsers] = useState([]);\n  const [search, setSearch] = useState(\"\")\n  // const [seacrhResult, setSearchResult]= useState(\"\")\n  // const [seacrhResult, setSearchResult]= useState([])\n  // const [sort, setSort] = useState(\"\")\n\n\n  //Use Effect\n  useEffect(() => {\n    loadUsers();\n  }, [])\n  \n  //Function loadUsers \n  const loadUsers = () => {\n    API.getEmployees().then((users) => {\n      setUsers(users.sort())\n      // console.log(users)\n    })\n      .catch(err => console.log(err));\n  }\n\n\n  const handleSearch = e => {\n    // e.preventDefault();\n\n    const { value } = e.target;\n    console.log(value);\n    setSearch(value);\n\n  }\n// by taking it outside of handle search \n// we allow it to render over and over again \n  let newUserArray = users.filter(user => {\n    \n      // console.log(user.firstname)\n      return user.firstname.toLowerCase().indexOf(search.toLowerCase()) !== -1 || user.lastname.toLowerCase().indexOf(search.toLowerCase()) !== -1\n    \n  })\n\n\n\n  //   const sortName = () => {\n\n  //   const newSortUser = []\n  //   users.sort(function (a, b) {\n  //     var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n  //     if (nameA < nameB) //sort string ascending\n  //       return -1\n  //     if (nameA > nameB)\n  //       return 1\n  //     return 0 //default return value (no sorting)\n  //   })\n  //   setUsers(users)\n  // }\n// const sortName= ()\n\n//  let newSort= [...users]\n//  setUsers(newsort)\n  \n//  newSort.sort((a,b)=>{\n//   // let nameA = a.firstname.toLowerCase()\n//   // let nameB = b.firstname.toLowerCase()\n//    if (a<b){\n\n//    }\n//  })\n\n const sortName = () => {\n    let newSortUser = [];\n    let switchUser =[]\n    newSortUser= [...users]\n    newSortUser.sort(function (a, b) {\n      let nameA = a.firstname.toLowerCase(), nameB = b.firstname.toLowerCase()\n      if (nameA < nameB) //sort string ascending\n        return -1\n    })\n    setUsers(newSortUser)\n  }\n\n  const sortPhone = () => {\n    let newSortUser = [];\n    let switchUser =[]\n    newSortUser= [...users]\n    newSortUser.sort(function (a, b) {\n      let nameA = a.phone, nameB = b.phone\n      if (nameA < nameB) //sort string ascending\n        return -1\n    })\n    setUsers(newSortUser)\n\n  }\n\n  // const sortName = () => {\n  //   let newSortUser = [];\n  //   let switchUser =[]\n  //   newSortUser= [...users]\n  //   console.log (switchUser)\n  //   newSortUser.sort(function (a, b) {\n  //     let nameA = a.firstname.toLowerCase(), nameB = b.firstname.toLowerCase()\n  //     if (nameA < nameB) //sort string ascending\n  //       return -1\n  //   })\n  //   setUsers(newSortUser)\n\n  // }\n// B trying\n\n  // const sortName = () => {\n  //   let newSortUser = [];\n  //   let switchUser =[]\n  //   newSortUser= [...users]\n  //   switchUser=[...users]\n  //   newSortUser.sort(function (a, b) {\n  //     let nameA = a.firstname.toLowerCase(), nameB = b.firstname.toLowerCase()\n  //     if (nameA < nameB) //sort string ascending\n  //       return -1\n  //     if(nam)\n  //     return -1\n  //   })\n  //   console.log(users) //non sort \n  //   console.log(newSortUser)\n\n  //   if (newSortUser === switchUser)\n  //   {console.log(\"apple\")\n  //     setUsers(newSortUser)}\n  //   else {\n  //     console.log(\"banana\")\n  //     newSortUser.reverse();\n  //     setUsers(newSortUser)\n  //   }\n  // }\n  // if (newSortUser) {\n  //   setUsers(newSortUser.reverse())\n  // }\n\n\n\n\n  // const sortName =(data=[...users]) =>{\n  //   let newsort = data.sort((a,b)=> {\n  //     a.firstname.localeCompare(b.firstname)\n  //   })\n  //   setUsers(newsort)\n    \n  // }\n\n  // else if (user.firstname.toLowerCase().indexOf(value.toLowerCase()) ){\n  //   setUsers(searchUsers)\n  // }\n  // // Threeway \n  // const handleSearch = e => {\n  //   e.preventDefault();\n\n  //   const { value } = e.target;\n\n  //   console.log(value);\n\n\n  //   setSearch(value);\n\n\n  //   let searchUsers = users.filter(user => {\n\n  //     return user.firstname.includes(search);\n\n  //   });\n  //   setUsers(searchUsers);\n  // }\n\n\n\n\n\n\n  return (\n    <div>\n      <Header />\n      <Search\n        className=\"form-group mt-5\" type=\"text\" onChange={handleSearch} value={search} users={users} />\n\n      {/* ()=> call the function  */}\n      <Table sortName={ ()=> sortName () } sortPhone={ ()=> sortPhone () }>\n\n        {newUserArray.map((user, index) => {\n          return (\n            // <SearchResult >\n            <TableRows\n              index={index}\n              image={user.image}\n              name={user.firstname + \" \" + user.lastname}\n              phone={user.phone}\n              email={user.email}\n              dob={user.dob}\n              key={index} />\n          )\n\n        })}\n\n\n      </Table>\n\n    </div>\n  );\n}\n\n\nexport default App;\n\n\n // Function SORT \n//  const sortName = users.sort()\n\n  // const sortName = ()=> {\n  //   users.sort();\n  //   users.reverse();\n\n\n  // // }\n  // const sortName = () => {\n\n  //   const newSortUser = []\n  //   users.sort(function (a, b) {\n  //     var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n  //     if (nameA < nameB) //sort string ascending\n  //       return -1\n  //     if (nameA > nameB)\n  //       return 1\n  //     return 0 //default return value (no sorting)\n  //   })\n  //   setUsers(users)\n  // }\n    // //   // when sort button is clicked, the ordoer of the aaray is backward \n\n    // }\n\n//  \n// do the bareminimum of showing up on the pagge \n// \n\n// import React, { useEffect, useState } from \"react\";\n// import Header from \"./components/Header.js\"\n// import Search from \"./components/SearchForm.js\"\n// import TableHead from \"./components/TableHead.js\"\n// import API from \"./utils/API.js\";\n\n\n\n// function App() {\n\n//     const [users, setUsers] = useState([]);\n//     const [user, setUser] = useState({});\n//     const [userIndex, setUserIndex] = useState(0);\n\n//     // When the component mounts, a call will be made to get random users.\n//     useEffect(() => {\n//       loadUsers();\n//     }, []);\n\n//     function loadUsers() {\n//       API.getLanguagesList()\n//         .then(languages => {\n//           API.getUsersByLanguage(languages[0]).then((users) => {\n//             setUsers(users);\n//             setUser(users[0]);\n//           });\n//         })\n//         .catch(err => console.log(err));\n//     }\n\n//     function capitalizeFirstLetter(string = \"\") {\n//       return string.charAt(0).toUpperCase() + string.slice(1);\n//     }\n\n\n\n//     // function handleBtnClick(event) {\n//     //   // Get the title of the clicked button\n//     //   const btnName = event.target.getAttribute(\"data-value\");\n//     //   if (btnName === \"next\") {\n//     //     const newUserIndex = userIndex + 1;\n//     //     nextUser(newUserIndex);\n//     //   } else {\n//     //     const newUserIndex = userIndex - 1;\n//     //     previousUser(newUserIndex);\n//     //   }\n//     // }\n\n\n//     // return (\n//     //   <div>\n//     //     <Header />\n//     //     <Search />\n//     //     <TableHead />\n//     //   </div>\n//     // );\n//     return (\n//       <div>\n//         <h1 className=\"text-center\">Welcome to LinkedUp</h1>\n//         <h3 className=\"text-center\">Click on the arrows to browse users</h3>\n//         <\n//           <CardContainer\n//             title={capitalizeFirstLetter(user.firstname) +\n//                 \" \" + capitalizeFirstLetter(user.lastname)}\n//             image={user.image}\n//             language={user.language}\n//             email={user.email}\n//             handleBtnClick={handleBtnClick}\n//           />\n//         </Row>\n//       </div>\n//     );\n\n//   }\n// export default App;\n\n\n\n// // ok B, stop the sheneigans let's do this again \n// import React, { useEffect, useState } from \"react\";\n// import Header from \"./components/Header.js\"\n// import Search from \"./components/SearchForm.js\"\n// import TableHead from \"./components/TableHead.js\"\n// import API from \"./utils/API.js\";\n\n// function App() {\n\n//   const [users, setUsers] = useState([]);\n//   // const [user, setUser] = useState({});\n//   // const [userIndex, setUserIndex] = useState(0);\n\n//   // When the component mounts, a call will be made to get random users.\n//   useEffect(() => {\n//     loadUsers();\n//   }, []);\n\n\n\n//   function loadUsers() {\n//     API.getEmployess()\n//       .then(users => {\n//         setUsers(users);\n//       })\n//       .catch(err => console.log(err));\n//   }\n\n//   // function capitalizeFirstLetter(string = \"\") {\n//   //   return string.charAt(0).toUpperCase() + string.slice(1);\n//   // }\n\n\n//   return\n//   (<div>\n//       <Header />\n//       <Search />\n//       <TableHead user={users} />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// sortName = () => {\n//   let sortEmp = [];\n//   if (this.state.alphabetical) {\n//       sortEmp = this.props.empList.sort((a, b) => {\n//           var nameA = a.name.last.toLowerCase(), nameB = b.name.last.toLowerCase();\n//           if (nameA < nameB)\n//               return -1\n//           if (nameA > nameB)\n//               return 1\n//           return 0\n//       })\n//   } else {\n//       sortEmp = this.props.empList.sort((a, b) => {\n//           var nameA = a.name.last.toLowerCase(), nameB = b.name.last.toLowerCase();\n//           if (nameA > nameB)\n//               return -1\n//           if (nameA < nameB)\n//               return 1\n//           return 0\n//       })\n//   }\n//   this.setState({\n//       alphabetical: !this.state.alphabetical,\n//       sortedEmployees: sortEmp\n\n//   })\n// }\n\n  // Change sort order upon click.\n  // const sortName = event => {\n  //   event.preventDefault();\n  //   const sortAsc = users.name.sort();\n  //   const sortDesc = sortAsc.reverse();\n  //   setSort((sort === \"\" || sortDesc) ? sortAsc : sortDesc);\n\n// \n// \n// \n// \n// \n// B TRYING, THIS WORKS \n// import HAVE to be capitalize \n// import React, { useEffect, useState } from \"react\";\n// import Header from \"./components/Header.js\"\n// import Search from \"./components/SearchForm.js\"\n// import TableRows from \"./components/TableRows.js\"\n// import API from \"./utils/API.js\";\n// import Table from \"./components/Table.js\"\n// import TableHead from \"./components/TableHead.js\"\n\n// function App() {\n//   // set hooks \n//   const [users, setUsers] = useState([]);\n//   const [search, setSearch] = useState(\"\")\n//   const [seacrhResult, setSearchResult]= useState(\"\")\n//   // const [sort, setSort] = useState(\"\")\n\n//   //Use Effect\n//   useEffect(() => {\n//     loadUsers();\n//   }, [])\n\n//   //Function loadUsers \n//   const loadUsers = () => {\n//     API.getEmployees().then((users) => {\n//       setUsers(users)\n//       console.log(users)\n//     })\n//       .catch(err => console.log(err));\n//   }\n\n//   const handleChange= e =>{\n//     setSearch(e.target.value);\n//   }\n\n//   useEffect (() => {\n//     const result = users.filter(user => \n//       user.includes(search)\n//       );\n//       setSearchResult(result);\n//     },[search]);\n\n\n//   //   API.SearchTerm ()\n//   //   .then(res => setSearch({name: {users}}))\n//   //   handleSearch()\n//   // }, [search])\n\n//   function handleSearch(e) {\n//     console.log(e.target.value)\n\n//     // handle fitlter a new array with that matching input \n//     // const searchUser = event => {\n//     setSearch(e.target.value);\n//     // };\n//   }\n\n//   // useEffect(() => {\n//   //   if (!search) {\n//   //     return;\n//   //   }\n\n//   //   API.searchTerm(search)\n//   //     .then(res => {\n//   //       if (res.data.length === 0) {\n//   //         throw new Error(\"No results found.\");\n//   //       }\n//   //       if (res.data.status === \"error\") {\n//   //         throw new Error(res.data.message);\n//   //       }\n//   //       setUsers();\n//   //     })\n\n//   // }, [search]);\n\n//   // const handleInputChange = event => {\n//   //   setSearch(event.target.value);\n//   // };\n\n\n\n\n//   // useEffect(() => {\n//   //   if (search === \"\") {\n//   //     setSearch(users)\n//   //     return;\n//   //   }\n//   //   let userSearch = [];\n//   //   for (let i = 0; i < Employees.length; i++) {\n//   //     if (Employees[i].name.toLowerCase().includes(search.toLowerCase())) {\n//   //       usersSearch.push(users[i]);\n//   //     };\n//   //   };\n//   //   setEmployees(employeeSearch);\n//   // }, [search]);\n\n\n//     return (\n//       <div>\n//         <Header />\n//         <Search className=\"form-group mt-5\" type= \"text\" onChange={handleChange} value={search}\n//         />\n//           {/* {searchResult.map((user, index) => {\n//             return (\n//               <TableRows\n//                 index={index}\n//                 image={user.image}\n//                 name={user.firstname + \" \" + user.lastname}\n//                 // sortName={sortName}\n//                 phone={user.phone}\n//                 email={user.email}\n//                 dob={user.dob}\n//                 key={index} />\n//             )\n\n//           })} */}\n\n//         {/* ()=> call the function  */}\n//         <Table>\n//           <TableHead />\n//           {users.map((user, index) => {\n//             return (\n//               <TableRows\n//                 index={index}\n//                 image={user.image}\n//                 name={user.firstname + \" \" + user.lastname}\n//                 // sortName={sortName}\n//                 phone={user.phone}\n//                 email={user.email}\n//                 dob={user.dob}\n//                 key={index} />\n//             )\n\n//           })}\n//         </Table>\n\n//       </div>\n//     );\n//   }\n\n\n// export default App;\n\n\n//  // Function SORT \n\n  // const sortName = ()=> {\n  //   users.sort();\n  //   users.reverse();\n\n  // // }\n  // const sortName = () => {\n\n  //   const newSortUser = []\n  //   users.sort(function (a, b) {\n  //     var nameA = a.name.toLowerCase(), nameB = b.name.toLowerCase()\n  //     if (nameA < nameB) //sort string ascending\n  //       return -1\n  //     if (nameA > nameB)\n  //       return 1\n  //     return 0 //default return value (no sorting)\n  //   })\n  //   setUsers(users)\n  // }\n    // //   // when sort button is clicked, the ordoer of the aaray is backward \n\n    // }\n\n//  \n// do the bareminimum of showing up on the pagge \n// \n\n// import React, { useEffect, useState } from \"react\";\n// import Header from \"./components/Header.js\"\n// import Search from \"./components/SearchForm.js\"\n// import TableHead from \"./components/TableHead.js\"\n// import API from \"./utils/API.js\";\n\n\n\n// function App() {\n\n//     const [users, setUsers] = useState([]);\n//     const [user, setUser] = useState({});\n//     const [userIndex, setUserIndex] = useState(0);\n\n//     // When the component mounts, a call will be made to get random users.\n//     useEffect(() => {\n//       loadUsers();\n//     }, []);\n\n//     function loadUsers() {\n//       API.getLanguagesList()\n//         .then(languages => {\n//           API.getUsersByLanguage(languages[0]).then((users) => {\n//             setUsers(users);\n//             setUser(users[0]);\n//           });\n//         })\n//         .catch(err => console.log(err));\n//     }\n\n//     function capitalizeFirstLetter(string = \"\") {\n//       return string.charAt(0).toUpperCase() + string.slice(1);\n//     }\n\n\n\n//     // function handleBtnClick(event) {\n//     //   // Get the title of the clicked button\n//     //   const btnName = event.target.getAttribute(\"data-value\");\n//     //   if (btnName === \"next\") {\n//     //     const newUserIndex = userIndex + 1;\n//     //     nextUser(newUserIndex);\n//     //   } else {\n//     //     const newUserIndex = userIndex - 1;\n//     //     previousUser(newUserIndex);\n//     //   }\n//     // }\n\n\n//     // return (\n//     //   <div>\n//     //     <Header />\n//     //     <Search />\n//     //     <TableHead />\n//     //   </div>\n//     // );\n//     return (\n//       <div>\n//         <h1 className=\"text-center\">Welcome to LinkedUp</h1>\n//         <h3 className=\"text-center\">Click on the arrows to browse users</h3>\n//         <\n//           <CardContainer\n//             title={capitalizeFirstLetter(user.firstname) +\n//                 \" \" + capitalizeFirstLetter(user.lastname)}\n//             image={user.image}\n//             language={user.language}\n//             email={user.email}\n//             handleBtnClick={handleBtnClick}\n//           />\n//         </Row>\n//       </div>\n//     );\n\n//   }\n// export default App;\n\n\n\n// // ok B, stop the sheneigans let's do this again \n// import React, { useEffect, useState } from \"react\";\n// import Header from \"./components/Header.js\"\n// import Search from \"./components/SearchForm.js\"\n// import TableHead from \"./components/TableHead.js\"\n// import API from \"./utils/API.js\";\n\n// function App() {\n\n//   const [users, setUsers] = useState([]);\n//   // const [user, setUser] = useState({});\n//   // const [userIndex, setUserIndex] = useState(0);\n\n//   // When the component mounts, a call will be made to get random users.\n//   useEffect(() => {\n//     loadUsers();\n//   }, []);\n\n\n\n//   function loadUsers() {\n//     API.getEmployess()\n//       .then(users => {\n//         setUsers(users);\n//       })\n//       .catch(err => console.log(err));\n//   }\n\n//   // function capitalizeFirstLetter(string = \"\") {\n//   //   return string.charAt(0).toUpperCase() + string.slice(1);\n//   // }\n\n\n//   return\n//   (<div>\n//       <Header />\n//       <Search />\n//       <TableHead user={users} />\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n// sortName = () => {\n//   let sortEmp = [];\n//   if (this.state.alphabetical) {\n//       sortEmp = this.props.empList.sort((a, b) => {\n//           var nameA = a.name.last.toLowerCase(), nameB = b.name.last.toLowerCase();\n//           if (nameA < nameB)\n//               return -1\n//           if (nameA > nameB)\n//               return 1\n//           return 0\n//       })\n//   } else {\n//       sortEmp = this.props.empList.sort((a, b) => {\n//           var nameA = a.name.last.toLowerCase(), nameB = b.name.last.toLowerCase();\n//           if (nameA > nameB)\n//               return -1\n//           if (nameA < nameB)\n//               return 1\n//           return 0\n//       })\n//   }\n//   this.setState({\n//       alphabetical: !this.state.alphabetical,\n//       sortedEmployees: sortEmp\n\n//   })\n// }\n\n  // Change sort order upon click.\n  // const sortName = event => {\n  //   event.preventDefault();\n  //   const sortAsc = users.name.sort();\n  //   const sortDesc = sortAsc.reverse();\n  //   setSort((sort === \"\" || sortDesc) ? sortAsc : sortDesc);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}